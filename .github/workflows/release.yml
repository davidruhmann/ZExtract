name: .NET Core Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.201
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Install Json Query Utility
        run: sudo apt-get install jq
      - name: Install dependencies
        run: dotnet restore
      - name: Package NuGet
        run: dotnet pack --configuration Release --no-restore --output .
      - uses: actions/upload-artifact@v2
        with:
          name: "NuGet Packages"
          path: "*nupkg"
      - name: Push to GiHub Package Repository
        run: dotnet nuget push *nupkg --skip-duplicate
      - name: Push to NuGet
        run: dotnet nuget push *nupkg --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
      - name: Publish
        run: dotnet publish --configuration Release --no-restore --output publish --runtime win-x86
      - uses: actions/upload-artifact@v2
        with:
          name: "ZExtractCLI"
          path: "publish/*"
      # - name: Package Publish
      #   run: zip -rjqD ZExtractCLI.zip publish/
      # - name: Release Vars
      #   id: release_vars
      #   run: echo "::set-output name=upload_url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$(jq --raw-output '.release.id' ${GITHUB_EVENT_PATH})/assets?name="
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.release_vars.outputs.upload_url }}
      #     asset_path: ./ZExtractCLI.zip
      #     asset_name: ZExtractCLI.zip
      #     asset_content_type: application/zip
