name: .NET Core

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.201
      - name: Install GPR Tool
        run: dotnet tool install gpr -g
      - name: Install Json Query Utility
        run: sudo apt-get install jq
      - name: Install dependencies
        run: dotnet restore
      - name: Package NuGet
        run: dotnet pack --configuration Release --no-restore --output . -p:Version="${GITHUB_REF##*/}"
      - uses: actions/upload-artifact@v2
        with:
          name: "NuGet Packages"
          path: "*nupkg"
      - name: Push to GiHub Package Repository
        #run: dotnet nuget push *nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/" --api-key ${{ secrets.GITHUB_TOKEN }} --disable-buffering --skip-duplicate
        run: find *nupkg -maxdepth 1 -type f -exec gpr --api-key ${{ secrets.GITHUB_TOKEN }} push {} --owner ${{ github.repository_owner }} +
      - name: Push to NuGet
        run: dotnet nuget push *nupkg --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY }} --disable-buffering --skip-duplicate
      - name: Publish
        run: dotnet publish --configuration Release --no-restore --output publish -p:Version="${GITHUB_REF##*/}"
      - uses: actions/upload-artifact@v2
        with:
          name: "ZExtractCLI"
          path: "publish/*"
      - name: Package Publish
        run: zip -rjqD ZExtractCLI.zip publish/
      - name: Release Vars
        id: release_vars
        run: |
          echo "::set-env name=GITHUB_RELEASE_ID::$(jq --raw-output '.release.id' ${GITHUB_EVENT_PATH})"
          echo "::set-output name=upload_url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${GITHUB_RELEASE_ID}/assets"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_vars.outputs.upload_url }}
          asset_path: ZExtractCLI.zip
          asset_name: ZExtractCLI.zip
          asset_content_type: application/zip
